import * as tomato from "@po-to/tomato";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as model from "views/global/common/Model";
import * as api from "views/global/common/API";
import * as Vue from "vue";
import * as tdom from "@po-to/tomato-jquery";
import UserCenterNav = require('views/m/user/UserCenterNav');

class VPresenter extends project.VPresenter {
    /**Wallet_vue模块 */
    public Wallet_vue: any;
    /**user */
    private user;
    /**所有 */
    private all;
    /**收入 */
    private income;
    /**支出 */
    private purchases;
    private _aside: JQuery;
    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        var vueDom = this.find("#Wallet_vue").get(0);
        var user = model.globalData.user;
        let all = this.all = new Array();
        let income = this.income = new Array();
        let purchases = this.purchases = new Array();
        let that = this;
        let Wallet_vue: any = this.Wallet_vue = new Vue({
            el: vueDom,
            data: {
                user: user,
                moneyDetailed: 0,
                balance: true,
                type: true,//默认支出
                BanlanceConfig: all
            },
            watch: {
                moneyDetailed: 'chooseStatus',
                'user.balance': 'chooseStatus',
            },
            methods: {
                //选择显示的收支状态
                chooseStatus: function () {
                    if (0 == Wallet_vue.moneyDetailed) {
                        Wallet_vue.BanlanceConfig = that.all;
                    } else if (1 == Wallet_vue.moneyDetailed) {
                        Wallet_vue.BanlanceConfig = that.income;
                    } else if (100 == Wallet_vue.moneyDetailed) {
                        Wallet_vue.BanlanceConfig = that.purchases;
                    }
                },
                /**timeShow */
                updateTime: function (startTime) {
                    startTime = startTime + '';
                    var text;
                    // var stime = new Date(startTime).getTime();//转换
                    var stime = startTime * 1000;
                    var date = new Date().getTime();

                    var gapMin = Math.floor((date - stime) / 1000 / 60);
                    // console.log(date + "-" + stime + "=" + gapMin);
                    if (gapMin <= 0) {
                        //防止偶尔出现的js取时间不准确
                        gapMin = 1;
                    }
                    var gapHour = Math.floor((date - stime) / 1000 / 60 / 60);

                    if (gapHour <= 24) {
                        text = gapHour + '小时前';
                        if (gapMin < 60) {
                            text = gapMin + '分钟前';
                        }
                    } else if (gapHour <= 24 * 30) {
                        gapHour = Math.floor(gapHour / 24);
                        text = gapHour + '天前'
                    } else if (gapHour <= 24 * 30 * 12) {
                        gapHour = Math.floor(gapHour / 24 / 30);
                        text = gapHour + '个月前'
                    } else {
                        //防止意外情况，暂时如此处理
                        text = '刚刚'
                    }
                    return text;
                }
            }
        });
        this._watchEvent();
        this._els = this._getElements();
    }
    public init() {
        let that = this;
        this.Wallet_vue.BanlanceConfig = this.all;
        if (0 == this.Wallet_vue.user.balance) {
            this.Wallet_vue.balance = true;
        } else {
            this.Wallet_vue.balance = false;
        }
        let type;
        let desc;
        let amt;
        let status;
        let updated_at;
        let created_at;
        /**获取收支明细 */
        api.getBillList({ sort: "updated_at", order: "desc", pagesize: 1000 }, function (json) {
            //成功
            //先清除原始数据
            that.all = [];
            that.income = [];
            that.purchases = [];

            let length = json.list.length;
            for (let i = 0; i < length; i++) {
                switch (json.list[i].sub_type) {
                    case 1: desc = "充值钱包";
                        break;
                    case 101: desc = "钱包余额提现";
                        break;
                    case 102: desc = "付费联系客户";
                        break;
                    case 103: desc = "付费开通短信增值服务";
                        break;
                    case 104: desc = "抢单服务费";
                        break;
                    default: desc = "扣款";
                        break;
                }
                type = json.list[i].type;
                amt = json.list[i].amt;
                status = json.list[i].status;
                updated_at = json.list[i].updated_at;
                created_at = json.list[i].created_at;
                if ("1" == type && (200 == status || 101 == json.list[i].sub_type)) {
                    that.all.push({ typeClass: "jinru", money: "+" + amt, type: type, intm: updated_at, status: status, title: desc });
                    //收入
                    that.income.push({ typeClass: "jinru", money: "+" + amt, type: type, intm: updated_at, status: status, title: desc });
                } else if ("2" == json.list[i].type && (200 == status || 101 == json.list[i].sub_type)) {
                    that.all.push({ typeClass: "zhichu", money: "-" + amt, type: type, intm: updated_at, status: status, title: desc });
                    //支出
                    that.purchases.push({ typeClass: "zhichu", money: "-" + amt, type: type, intm: updated_at, status: status, title: desc });
                }
            }
            that.Wallet_vue.BanlanceConfig = that.all;
        }, function (error: tomato.PError) {
            //失败
            funs.tip(error.note, "", "fail");
        });
        return tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/user/UserCenterNav'), (UserCenterNav) => {
            this._aside = UserCenterNav.view as JQuery;
        })
    }
    getAside() {
        return this._aside;
    }
    /**去充值 */
    private _evt_pCenterCharge() {
        tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/grab/BalanceLowModal'), (BalanceLowModal) => {
            tdom.open(BalanceLowModal, tdom.DialogTarget.Blank, {
                size: { width: '90%', height: tomato.DialogSize.Content },
                effect: tdom.DialogEffect.scale,
                masked: true
            });
        });

    }
    /**提现 */
    private _evt_openModal() {
        tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/user/TransferOuterModal'), (TransferOuterModal) => {
            //登录窗
            tdom.open(TransferOuterModal, tdom.DialogTarget.Blank, {
                size: { width: '90%', height: tomato.DialogSize.Content },
                effect: tdom.DialogEffect.scale,
                masked: true
            });
        })

    }

}
export = VPresenter;