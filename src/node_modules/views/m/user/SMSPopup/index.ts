import * as tomato from "@po-to/tomato";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as model from "views/global/common/Model";
import * as api from "views/global/common/API";
import * as Vue from 'vue';
import * as tdom from "@po-to/tomato-jquery";
import valueAddService = require('views/m/user/ValueAddService');
import wallet = require('views/m/user/Wallet');
import balLow = require('views/m/grab/BalanceLowModal');

class VPresenter extends project.VPresenter {
    /**模块 */
    private SMSPopup_vue: any;
    /**付费金额 */
    // private money;
    /**付费月数 */
    // private month;
    /**单月价格 */
    // private month;
    /**user */
    private user;
    private index;
    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        let that = this;
        let v_pane = this.find('.vue-pane')[0];
        let user = this.user = model.globalData.user;
        let supplier_vas = model.globalData.supplier_vas;
        // let selected_city = model.globalData.selected_city;
        let SMSPopup_vue: any = this.SMSPopup_vue = new Vue({
            el: v_pane,
            data: {
                price: 59,
                money: 0,
                month: 1,
                prov: "",
                // index: -1,
            },
        })
        this._watchEvent();
        this._els = this._getElements();
    }
    public setMoney(price:number, month: number, money: number, prov: string, index: number) {
        this.SMSPopup_vue.price = price;
        this.SMSPopup_vue.money = money;
        this.SMSPopup_vue.month = month;
        this.SMSPopup_vue.prov = prov;
        this.index = index;
    }
    _evt_ensure(json?: any) {
        var that = this;
        var data: any;
        // 支付宝充值之后跳转回来，会调用此方法，并传进参数；
        if (json) {
            data = json;
        } else {
            //付费接口
            data = {
                prov: that.SMSPopup_vue.prov,
                month_cnt: that.SMSPopup_vue.month,
                amt: parseInt(that.SMSPopup_vue.money)
            }
        }
        //查看余额是否充足
        if (that.user.balance >= parseInt(data.amt)) {
            api.openSmsVas(data, function (json) {
                // 移除可能存在的充值记录
                localStorage.removeItem('openSmsRecord');
                // json.note;
                (that.parent as tomato.Dialog).close();
                funs.tip("开通服务成功", "", "succ");
                model.globalData.user.balance = json.user.bal;
                if (101 == json.sms_vas.type) {
                    if (isNaN(that.index)) {
                        //新增
                        model.globalData.supplier_vas.push({ type: json.sms_vas.type, prov: json.sms_vas.prov, end_date: json.sms_vas.end_date, });
                    } else {
                        //续费
                        model.globalData.supplier_vas[that.index].type = json.sms_vas.type;
                        model.globalData.supplier_vas[that.index].prov = json.sms_vas.prov;
                        model.globalData.supplier_vas[that.index].end_date = json.sms_vas.end_date;
                    }

                    tomato.getVPresenter<valueAddService>(funs.moduleToUrl('m/user/ValueAddService'), (valueAddService) => {
                        valueAddService.ValueAddService_vue.closeProvience();
                        valueAddService.init();
                    })
                }

            }, function (data: tomato.PError) {
                //如果请求失败,刷新当前
                funs.tip(data.note, "", "fail");
                // window.location.reload();
            })

        } else {
            var timeout = 1;
            var openStyle = tdom.DialogTarget.Self;
            var recordArgs = {
                prov: this.SMSPopup_vue.prov,
                month_cnt: this.SMSPopup_vue.month,
                amt: parseInt(this.SMSPopup_vue.money)
            };
            if (json) {
                funs.tip('请继续充值', '充值金额不足以支付增值服务的费用，请继续充值', 'succ')
                timeout = 3020;
                openStyle = tdom.DialogTarget.Blank;
                recordArgs = json;
            }
            // 如果余额不足掉用了充值，则记录请求的参数值
            localStorage.setItem('openSmsRecord', JSON.stringify(recordArgs));
            
            setTimeout(function () {
                //弹出余额不足的弹窗
                tomato.getVPresenter<balLow>(funs.moduleToUrl('m/grab/BalanceLowModal'), (balLow) => {
                    balLow.setChoosedMoney(recordArgs.amt);
                    tdom.open(balLow, openStyle , {
                        size: { width: '90%', height: tomato.DialogSize.Content },
                        effect: tdom.DialogEffect.scale,
                        masked: true
                    });
                });
            }, timeout)
            

        }
    }
}
export = VPresenter;