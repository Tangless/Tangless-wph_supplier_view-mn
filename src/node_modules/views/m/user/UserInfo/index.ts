import * as tomato from "@po-to/tomato";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as model from "views/global/common/Model";
import * as api from "views/global/common/API";
import * as Vue from "vue";
import * as tdom from "@po-to/tomato-jquery";

class VPresenter extends project.VPresenter {
    /**UserInfo_vue模块 */
    public UserInfo_vue: any;
    /**user */
    private user;
    private city;
    private province;
    private _hide:JQuery;
    private _aside: JQuery;
    private _btn:JQuery;
    private vueData: {
        user: any,
        userAvatar: any
    };
    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        this._hide=this.find(".user-hide");
        this._btn = this.find(".btn");
        var vueDom = this.find("#UserInfo_vue").get(0);
        var city = this.city = model.globalData.city;
        var province = this.province = model.globalData.province;
        var avatar = model.globalData.user.avatar;
        this.vueData = {
            user: {},
            userAvatar: model.globalData.user
        };
        let that = this;
        let UserInfo_vue: any = window['aaa'] = this.UserInfo_vue = new Vue({
            el: vueDom,
            data: that.vueData,
            watch: {
                'user.nick': "checkData",
                'user.address': "checkData",
                'user.company_name': "checkData",
                'user.position': "checkData",

            },
            methods: {
                //限制输入
                checkData: function () {
                    UserInfo_vue.user.mobile = UserInfo_vue.user.mobile.replace(/[^\d]/g, '');
                    UserInfo_vue.user.nick = UserInfo_vue.user.nick.replace(/[^(\u4e00-\u9fa5)]/, '');
                    UserInfo_vue.user.address = UserInfo_vue.user.address.replace(/[^(\u4e00-\u9fa5)]/, '');
                    UserInfo_vue.user.company_name = UserInfo_vue.user.company_name.replace(/[^(\u4e00-\u9fa5)]/, '');
                    UserInfo_vue.user.position = UserInfo_vue.user.position.replace(/[^(\u4e00-\u9fa5)]/, '');
                },
            }
        });

        this._watchEvent();
        //this._els = this._getElements();
    }
    private _evt_addAvatar() {
        tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/user/AvatarUploader'), (AvatarUploader) => {
            tdom.open(AvatarUploader, tdom.DialogTarget.Blank, {
                size: { width: '90%', height: tomato.DialogSize.Content },
                effect: tdom.DialogEffect.scale,
                masked: true
            });
        });
    }

    init() {
        return tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/user/UserCenterNav'), (UserCenterNav) => {
            this._aside = UserCenterNav.view as JQuery;
        })
    }
    getAside() {
        return this._aside;
    }
    /**保存个人信息 */
    private _evt_saveUserInfo() {
        let that = this;
        // alert(that._btn.text())
        if($(".btn").text()=="保存"){
            let nickname = this.UserInfo_vue.user.nick;
            let gender = this.UserInfo_vue.user.sex;
            let prov = this.province.province_name;
            let city = this.city.city_name;
            let addr = this.UserInfo_vue.user.address ? this.UserInfo_vue.user.address : undefined;
            let com = this.UserInfo_vue.user.company_name ? this.UserInfo_vue.user.company_name : undefined;
            let pos = this.UserInfo_vue.user.position ? this.UserInfo_vue.user.position : undefined;
            let userInfo = {
                nickname: nickname,
                gender: gender,
                prov: prov,
                city: city,
                addr: addr,
                com: com,
                pos: pos
            }
            // $.each(userInfo, function (key, value) {
            //     if (!value) {
            //         delete userInfo[key];
            //     }
            // }) 
            api.SetUserInfo(userInfo, function (data: any) {
                $(".user-hide").removeClass("hide");
                $(".btn").text("编辑");
                funs.tip("保存成功", "", "succ");
                //成功,刷新页面
                that.setGlobalData();
                // window.location.reload();
            }, function (error: tomato.PError) {
                funs.tip(error.note, "", "fail");
            });

        }else if(that._btn.text()=="编辑"){
            $(".user-hide").addClass("hide");
            $(".btn").text("保存");
        }
    }
    _afterInstallTo() {
        this.getGlobalData();
        $(".btn").text("编辑");
    }
    setGlobalData() {
        //this.vueData => globalData
        var avatar = model.globalData.user.avatar;
        $.extend(true, model.globalData.user, this.UserInfo_vue.user);
        model.globalData.user.avatar = avatar;

    }
    getGlobalData() {
        //globalData => this.vueData
        this.UserInfo_vue.user = funs.deepCopy(model.globalData.user);
    }
}
export = VPresenter;