import * as tomato from "@po-to/tomato";
import * as tdom from "@po-to/tomato-jquery";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as model from "views/global/common/Model";
import * as api from "views/global/common/API";
import * as Vue from 'vue';
import demandDetail = require('views/m/DemandDetail');

class VPresenter extends project.VPresenter {
    private type: string;
    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        this._watchEvent();
        this._els = this._getElements();
        let that = this;

        let v_pane = this.find('.center')[0];
        let data = model.globalData.user;
        new Vue({
            el: v_pane,
            data: { user: data },
            methods: {
                submit: function () {
                    var nick = model.globalData.user.nick;
                    var mobile = model.globalData.user.mobile;
                    var avatar = model.globalData.user.avatar;
                    var userInfo = {
                        nickname: nick,
                    };
                    if (nick && mobile && avatar) {
                        //激活成功则关闭弹窗
                        api.activeSupplier(userInfo, function () {
                            funs.tip('更新个人信息成功', '', 'succ', '1600');
                            (that.parent as tomato.Dialog).close();
                            /**
                             * == 如果是抢单时打开的上传头像，则直接打开抢单框
                            * type = 1 ,  抢单
                            * type = 2 ,  聊天
                            */
                            if (that.type == '1') {
                                setTimeout(function () {
                                    /** 暂时屏蔽正常逻辑  */
                                    //弹出抢单确认框
                                    // tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/grab/PayADepositModal'), (PayADepositModal) => {
                                    //     tdom.open(PayADepositModal, tdom.DialogTarget.Blank, {
                                    //         size: { width: '90%', height: tomato.DialogSize.Content },
                                    //         masked: true,
                                    //     });
                                    // });
                                    /** 暂时屏蔽正常逻辑  */

                                    /** 临时代码－－start */
                                    tomato.getVPresenter<demandDetail>(funs.moduleToUrl('m/DemandDetail')), (demandDetail) => {
                                        demandDetail._evt_grab();
                                    }
                                    /** 临时代码－－end */
                                }, 2000);
                            } else if (that.type == '2') {
                                setTimeout(function () {
                                    tomato.getVPresenter<demandDetail>(funs.moduleToUrl('m/DemandDetail')), (demandDetail) => {
                                        demandDetail._evt_onlineChat();
                                    }
                                }, 2000);
                            }
                        }, function () {
                            funs.tip('更新失败，请重试', '', 'fail');
                        })
                    }
                },
                addAvatar: function () {
                    //打开上传头像的弹窗
                    tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/user/AvatarUploader'), (AvatarUploader) => {
                        tdom.open(AvatarUploader, tdom.DialogTarget.Blank, {
                            size: { width: '90%', height: tomato.DialogSize.Content },
                            masked: true,
                        });
                    });
                }
            }
        });
        // 监听名字输入
        this.find('.nickname').on('input', function () {
            var v = $(this).val();
            if (v && v != ' ') {
                that.checkData();
            } else {
                that.find('.btn').attr('disabled', 'disabled');
            }
        })
    }
    checkData() {
        var nick = model.globalData.user.nick;
        var mobile = model.globalData.user.mobile;
        var avatar = model.globalData.user.avatar;
        if (nick && mobile && avatar) {
            this.find('.btn').removeAttr('disabled');
        }
    }
    setType(type) {
        /**
         * type = 1 ,  抢单
         * type = 2 ,  聊天
         */
        this.type = type;
    }
}
export = VPresenter;