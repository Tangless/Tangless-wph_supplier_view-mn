import * as tomato from "@po-to/tomato";
import * as tdom from "@po-to/tomato-jquery";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as api from "views/global/common/API";
import * as model from "views/global/common/Model";
import * as Vue from 'vue';
import demandDetail = require('views/m/DemandDetail');
import UpdateSupplierInfo = require('views/m/user/UpdateSupplierInfo');

class VPresenter extends project.VPresenter {
    private currSessIsOthers: boolean;//当前会话是否是别人的项目会话
    private selfInfo: any;//自己的用户信息
    private selfProject: any;//自己的项目信息
    private selfDemandId: any;//自己的项目id
    private currDemandId: any;//当前项目id
    private tempProject: any;//当前临时的项目
    private webim: any;
    private webim2: any;
    private webim3: any;
    private proInfo: any;
    private footer: tomato.VPresenter;
    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        this._watchEvent();
        this._els = this._getElements();
        var that = this;
        var that = this;
        /**===================项目列表渲染===================== */
        var v_pros = that.find('.demand_list')[0];
        var data = model.globalData;
        new Vue({
            el: v_pros,
            data: data,
            methods: {
                openDetails: function () {
                    tomato.getVPresenter<demandDetail>(funs.moduleToUrl('m/DemandDetail'), (demandDetail) => {
                        demandDetail.vpid = demandDetail.vpid.replace(/\?(demand=\d*)?/, '?demand=' + model.globalData.current_demand.id);
                        funs.loadPage(demandDetail);
                    });
                    that._evt_fold();
                }
            }
        });
        //聊天界面预设
        this._setChatHeight();
        //聊天界面
        var msgPane = this.find('.chat-pane');
        //输入框输入事件监听
        this.find('#input').on('input propertychange blur', function () {
            //聊天面板滚到底部3t
            msgPane[0].scrollTop = msgPane[0].scrollHeight;

            var v = $(this).val();
            if (v.length > 0 && v.trim().length > 0) {
                that.find('#sendMsg').removeClass("hide").removeAttr('disabled');
                that.find('.enclosure').addClass("hide");
            } else {
                $(this).css('height', '26px');
                that.find('#sendMsg').addClass("hide").attr('disabled', 'disabled');
                that.find('.enclosure').removeClass("hide");
            }
        }).on('focus', function () {
            if (!model.globalData.user.avatar || model.globalData.user.avatar.indexOf('supplier.jpg') >0) {
                //弹出完善个人资料信息弹窗
                tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/user/UpdateSupplierInfo'), (UpdateSupplierInfo) => {
                    tdom.open(UpdateSupplierInfo, tdom.DialogTarget.Blank, {
                        size: { width: '90%', height: tomato.DialogSize.Content },
                        masked: true,
                    });
                });
            }
        });
        this.find('#input').click(function () {
            var that = this;
            setTimeout(function () {
                that.scrollIntoView(true);
            }, 100)
        });
        //监听窗口缩放事件
        $(window).resize(function () {
            msgPane[0].scrollTop = msgPane[0].scrollHeight;
        });
        //监听消息发送提交
        this.find('.input-pane').on('submit', function (e) {
            e.preventDefault();
            that._evt_sendMsg();
        });
        //图片选择事件
        $('#imgFile').on('change', function () {
            if (model.globalData.user.avatar) {
                webimConfigs.sendImage();
            } else {
                //弹出完善个人资料信息弹窗
                tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/user/UpdateSupplierInfo'), (UpdateSupplierInfo) => {
                    tdom.open(UpdateSupplierInfo, tdom.DialogTarget.Blank, {
                        size: { width: '90%', height: tomato.DialogSize.Content },
                        masked: true,
                    });
                });
            }

        });
        /**====================聊天室逻辑====================== */
        this.selfInfo = model.globalData.user;
        this.selfProject = model.globalData.demand;
        this.tempProject = model.globalData.current_demand;

        //消息监听
        this.webim = {
            session: '',
            messages: { history: [], news: [] },
            update: function (msgs) {
                var html = '';
                for (var i = 0, j = msgs.length; i < j; i++) {
                    html = html + that.pushMsg(msgs[i]);
                }
                msgPane.append(html);

                var delayTime = 300;
                //如果消息中没有图片,就加快显示速度
                if (html.indexOf('chat-img') < 0) {
                    delayTime = 30;
                }
                //图片加载需要时间,延迟滚动
                setTimeout(function () {
                    msgPane[0].scrollTop = msgPane[0].scrollHeight;
                }, delayTime);

                var id = this.session;
                var lastMsg = msgs[msgs.length - 1].text;
                if (lastMsg.indexOf('chat-img') > 0) {
                    lastMsg = '[图片]'
                }
            },
            history: function (msgs) {
                // 如果历史消息为空，则造一条假的消息，以便洽谈室的历史消息监听能够获得通知，从而移除loading动画；
                if (msgs.length == 1 && msgs[0].type == 'fake') {
                    msgPane.find('.msgLoding').remove();
                    msgPane[0].scrollTop = msgPane[0].scrollHeight;
                    that._setChatHeight();
                    return
                }
                var html = '';
                for (var i = 0; i < msgs.length; i++) {
                    html = that.pushMsg(msgs[i]) + html;
                }
                msgPane.prepend(html);

                //如果消息中没有图片,就加快显示速度
                var delayTime = 300;
                if (html.indexOf('chat-img') < 0) {
                    delayTime = 30;
                }
                //图片加载需要时间,延迟滚动
                setTimeout(function () {
                    msgPane.find('.msgLoding').remove();
                    msgPane[0].scrollTop = msgPane[0].scrollHeight;
                }, delayTime);
            }
        };
        webimConfigs.addListener(this.webim);
        // 通过链接直接打开聊天室，或聊天室刷新页面，则等到im初始化完成再调用聊天时初始化方法！！！草！！！
        $(document.body).on('imInit', function () {
            that._afterInstallTo();
        });

    }
    //打开聊天室初始化方法（模块打开自动调用）
    _afterInstallTo() {
        var that = this;
        if (!webimConfigs.chatRoomReady) {
            return;
        }
        this.selfDemandId = model.globalData.demand.id;
        this.currDemandId = model.globalData.current_demand.id;
        this.tempProject = model.globalData.current_demand;
        this.find('.chat-pane').html('');
        if(this.tempProject.uid == model.globalData.user.user_id){
            funs.tip('请不要参与自己的项目','','fail');
        }
        // 获取当前用户的项目列表，渲染
        api.GetUserDemandList({ uid: that.tempProject.uid }, function (list) {
            model.globalData.currUserDemandList = list;
        });

        //打开自己的项目的聊天室
        if (this.selfDemandId && this.selfDemandId == this.currDemandId) {
            funs.tip('请不要参与自己的项目', '', 'fail', 2000);
            setTimeout(function () {
                funs.viewHistory.go(-1);
            }, 2600);
        } else {
            this.switchSession(that.tempProject.user.id || nim.currSess);
        }
        this._setChatHeight();
    };
    //切换聊天对象 更新设置
    switchSession(sessionID) {
        webimConfigs.setCurrSession(sessionID);
        this.find('.unread-num').hide().html('');
        this.webim.session = sessionID;
        this.webim.messages = { history: [], news: [] };
        // 显示loading动画，记录最近的会话id
        if (sessionID != '') {
            var loadingGif = '<img  class="msgLoding" src="`{VIEWSURL}`/m/ChatRoomTpl/images/loading1.gif" width="96" height= "16"/>'
            $('.chat-pane').html(loadingGif);
            webimConfigs.lastSession = sessionID;
        }
    };
    //在聊天窗口显示消息
    pushMsg(msg) {
        var that = this;
        var fromAccount = msg.from;
        var isSelfSend = msg.flow == 'out';//消息是否为自己发的
        var subType = msg.type;//消息类型
        var triangle, userhead;
        var onemsg = '';
        //群普通消息
        if (subType == 'text') {

            //查询消息成员的资料
            // var memberInfo: any = that._getCurrentGroupMember(fromAccount);

            //如果自己发的消息
            if (isSelfSend) {
                userhead = '<img class="user-head-icon" src="' + model.globalData.user.avatar + '"/>';
                //小三角
                triangle = '<img class="triangle" src="`{VIEWSURL}`/m/ChatRoomTpl/images/triangle.png">';

                onemsg = '<div class="one-message self-msg">' + userhead +
                    '<div class="msgbody"><pre>' + msg.text + '</pre>' + triangle +
                    '</div></div>';

            }
            //不是自己发的消息
            else {
                var msghead = '';
                // 如果是发项目的客户
                if (msg.from == model.globalData.current_demand.user.id) {
                    userhead = '<span class="user-head-icon">' + model.globalData.current_demand.user.nick.substr(0, 1) + '</span>';
                    msghead = '<div class="msgfrom-info">客户<span class="msgfrom-company">&nbsp;|&nbsp;' + model.globalData.current_demand.user.nick + '</span></div>'
                }
                //小三角
                triangle = '<img class="triangle" src="`{VIEWSURL}`/m/ChatRoomTpl/images/triangle2.png">';

                if (msg.from == '3') {
                    userhead = '<img class="user-head-icon" src="`{VIEWSURL}`/m/ChatRoomTpl/images/jvhua.jpg"/>';
                    msghead = '<div class="msgfrom-info">万屏汇小秘书</span></div>'
                }
                onemsg = '<div class="one-message">' + msghead + userhead +
                    '<div class="msgbody"><pre>' + msg.text + '</pre>' + triangle +
                    '</div></div>';
            }
        }
        //如果是图片,去掉<pre>标签
        if (onemsg.indexOf('chat-img') > 0) {
            onemsg = onemsg.replace('<pre>', '').replace('</pre>', '');
        }
        return onemsg
    };
    //发送消息点击事件
    _evt_sendMsg() {
        var that = this;
        var text = $('#input').val();
        if (text.length > 0 && text.trim().length > 0) {
            $('#sendMsg').attr('disabled', 'disabled');
            webimConfigs.onSendMsg(text, {
                succ: function (msg) {
                    console.log('发送成功');
                    that._clearInput(true);
                    //清空草稿
                    funs.setSession("tmpmsg_" + nim.currSess, '');
                    //========**第一次发言的话，更新参与状态**========//
                    var selfJoinedInfo = that._hasFriend();
                    if (!selfJoinedInfo && that.selfInfo.user_id != '3') {
                        api.UpdateSupplierChatStatus({ demand_id: that.tempProject.id }, function (json) {
                            console.log('参与项目成功');
                            that._updateJoinedList(json);
                        }, function (error) {
                            // 如果报错是“已参与过项目”，则更新项目信息及参与列表
                            if (error.name == "41018012") {
                                api.GetDemandInfo({ id: that.tempProject.id }, function (json) {
                                    that._updateJoinedList(json);
                                }, function () {
                                })
                            }

                        })
                    }
                },
                fail: function (err) {
                    that.switchSession(that.tempProject.user.id);
                    that._evt_sendMsg();
                }
            });
        }
    };
    //发送图片
    _evt_sendImg(data, obj) {
        this.find('#imgFile').trigger('click');
    };
    //清空输入框后发送按钮隐藏
    _clearInput(focusFlag?: boolean) {
        this.find("#input").val('').css('height', '24px');
        focusFlag && this.find("#input").focus();
        this.find('#sendMsg').addClass("hide").removeAttr('disabled');
        this.find('.enclosure').removeClass('hide');
    };
    // 保存草稿
    _saveDraft(toSel) {
        //保存当前的消息输入框内容到草稿
        var msgtosend = this.find('#input').val();
        var msgLen = msgtosend.trim().length;
        if (msgLen > 0) {
            funs.setSession("tmpmsg_" + nim.currSess, msgtosend);
        }
        //清空聊天界面
        $(".chat-pane").html('');
        //获取缓存的草稿内容
        var tmgmsgtosend = funs.getSession("tmpmsg_" + toSel);
        if (tmgmsgtosend) {
            this.find("#input").val(tmgmsgtosend);
        } else {
            this._clearInput();
        }
    };
    //获取当前会话是否已经参与
    _hasFriend = function () {
        var jl = model.globalData.joined_list;
        var j = jl.length;
        var hasFriend = false;
        for (var i = 0; i < j; i++) {
            if (this.tempProject.uid == jl[i].uid) {
                hasFriend = true;
                break;
            }
        }
        return hasFriend
    };
    //重设聊天界面的高度
    _setChatHeight() {
        var phoneH = document.documentElement.clientHeight || $(window).height();
        var topBarH = this.find('.TopBar').innerHeight();
        var grabH = this.find('.demand_list').innerHeight();
        var inputH = this.find('.input-pane').innerHeight();
        var aaa = phoneH - grabH - inputH - topBarH - 3;
        this.find('.chat-pane').css('height', aaa + 'px');
    };
    // 更新参与的项目信息及其相关信息
    _updateJoinedList(json) {
        // 更新项目信息
        var curr_pro = model.globalData.current_demand;
        curr_pro.supplier_partic_status = json.demand_info.supplier_partic_status;
        curr_pro.supplier_list = json.demand_info.partic_supplier_list;
        curr_pro.bid_cnt = json.demand_info.demand.bid_cnt;

        var pro_list = model.globalData.project_list;
        // 更新项目列表中此项目的信息
        for (var i = 0; i < pro_list.length; i++) {
            if (curr_pro.id == pro_list[i].id) {
                pro_list[i] = curr_pro;
                break;
            }
        }
        // 更新参与项目列表信息
        let joined_list = model.globalData.joined_list;
        let hasPro = false;
        for (var i = 0; i < joined_list.length; i++) {
            if (curr_pro.id == joined_list[i].id) {
                joined_list[i] = $.extend(joined_list[i], curr_pro);
                hasPro = true;
            }
        }
        if (!hasPro) {
            joined_list.push(curr_pro);
        }
    }
    /*================抢单逻辑－start===============*/
    _evt_grab() {
        var that = this;
        let userInfo = model.globalData.user;
        let demandInfo = model.globalData.current_demand;
        if (userInfo.user_type == 100) {
            if (userInfo.avatar) {
                /** 暂时不需要工程商缴费，所以，此处正常逻辑先屏蔽 */
                // tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/grab/PayADepositModal'), (PayADepositModal) => {
                //     tdom.open(PayADepositModal, tdom.DialogTarget.Blank, {
                //         size: { width: '90%', height: tomato.DialogSize.Content },
                //         masked: true,
                //     });
                // });
                /** 暂时不需要工程商缴费，所以，此处正常逻辑先屏蔽 */

                // 临时逻辑－ start- /
                //抢单
                api.grabDemand({ "demand_id": demandInfo.id }, function (json) {
                    // 更新项目信息
                    var curr_pro = model.globalData.current_demand;
                    curr_pro.supplier_partic_status = json.demand_info.supplier_partic_status;
                    curr_pro.supplier_list = json.demand_info.partic_supplier_list;
                    curr_pro.bid_cnt = json.demand_info.demand.bid_cnt;
                    curr_pro.status = json.demand_info.demand.status;
                    curr_pro.user.phone = json.demand_info.user.mobile;

                    var pro_list = model.globalData.project_list;
                    // 更新项目列表中此项目的信息
                    for (var i = 0; i < pro_list.length; i++) {
                        if (curr_pro.id == pro_list[i].id) {
                            pro_list[i] = curr_pro;
                            break;
                        }
                    }
                    // 更新参与项目列表信息
                    let joined_list = model.globalData.joined_list;
                    let hasPro = false;
                    for (var i = 0; i < joined_list.length; i++) {
                        if (curr_pro.id == joined_list[i]) {
                            joined_list[i] = $.extend(joined_list[i], curr_pro);
                            hasPro = true;
                        }
                    }
                    if (!hasPro) {
                        joined_list.push(curr_pro);
                    }
                    // 自动拨打电话
                    window.location.href = 'tel://' + curr_pro.user.phone;  
                },
                    function (data: tomato.PError) {
                        //如果请求失败,刷新当前
                        funs.tip('请求失败，请重试', data.note, 'fail');
                    })
                // 临时逻辑－ end- /
            } else {
                //弹出完善个人资料信息弹窗
                tomato.getVPresenter<UpdateSupplierInfo>(funs.moduleToUrl('m/user/UpdateSupplierInfo'), (UpdateSupplierInfo) => {
                    UpdateSupplierInfo.setType('1');
                    tdom.open(UpdateSupplierInfo, tdom.DialogTarget.Blank, {
                        size: { width: '90%', height: tomato.DialogSize.Content },
                        masked: true,
                    });
                });
            }
        } else {
            //当前登录信息与前端逻辑不合，直接刷新
            window.location.reload();
        }
    }
    //点击查看大图
    _evt_scanBig = function (data, obj) {
        var src = $(obj).attr('src');
        var width = $(obj).width();
        var height = $(obj).height();
        var rate = width / height;//宽高比
        var hh = $(window).width();//大图的宽 == 屏幕宽度
        var bgh = hh / rate / 2;  // 计算出大图的高度 de 一半

        //dom插入
        var bigImg = '<div class="bigImgBg" evt="closeBigImg"><img class="bigImg" src="' + src + '"/></div>';
        $(this.view).append(bigImg);

        //让图片垂直居中
        $('.bigImg').css('margin-top', -bgh + 'px');
    };
    _evt_closeBigImg = function (data, obj) {
        $(obj).remove();
    };
    // 页面卸载事件
    _afterUninstallTo() {
        this.switchSession('');
        this._evt_fold();
    }
    _evt_unfold(data, obj) {
        this.find('.list').addClass('open');
        $(obj).hide();
        this.find('.curr_pro').hide();
    };
    _evt_fold() {
        this.find('.list').removeClass('open').find('.unfold').show();
        this.find('.curr_pro').show();
    };
    _evt_openDetails(data, obj) {
        var index = $(obj).attr("index");
        var demand = model.globalData.currUserDemandList[index];
        model.globalData.current_demand = demand;
        tomato.getVPresenter<demandDetail>(funs.moduleToUrl('m/DemandDetail'), (demandDetail) => {
            demandDetail.vpid = demandDetail.vpid.replace(/\?(demand=\d*)?/, '?demand=' + model.globalData.current_demand.id);
            funs.loadPage(demandDetail);
        });
        this._evt_fold();
    };
    _evt_openDemandInfo(data, obj) {
        var did = $(obj).attr('did');
        var cud = model.globalData.currUserDemandList;
        cud.forEach(demand => {
            if (did == demand.id) {
                model.globalData.current_demand = demand;
                tomato.getVPresenter<demandDetail>(funs.moduleToUrl('m/DemandDetail'), (demandDetail) => {
                    demandDetail.vpid = demandDetail.vpid.replace(/\?(demand=\d*)?/, '?demand=' + model.globalData.current_demand.id);
                    funs.loadPage(demandDetail);
                });
            }
        });
    }
}
export = VPresenter;